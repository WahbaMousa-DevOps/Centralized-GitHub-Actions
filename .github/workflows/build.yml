name: Reusable Build

on:
  workflow_call:
    inputs:
      language:
        required: true
        type: string
    secrets:
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true

jobs:
  build:
    name: Build and Package
    runs-on: ubuntu-latest

    env:
      DOCKER_REGISTRY: docker.io

    steps:
      - name: Checkout Source
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build ${{ inputs.language }} App
        run: |
          case "${{ inputs.language }}" in
            # node)
            #   echo Node: Installing dependencies...
            #   npm ci
            #   echo Building Docker image...
            #   docker build -t $DOCKER_USERNAME/nodejs-web-app:${{ github.sha }} .
            #   docker tag $DOCKER_USERNAME/nodejs-web-app:${{ github.sha }} $DOCKER_USERNAME/nodejs-web-app:latest
            #   ;;

            # java)
            #   echo Java: Building with Gradle...
            #   chmod +x ./gradlew
            #   ./gradlew build --no-daemon
            #   echo Building Docker image...
            #   docker build -t $DOCKER_USERNAME/java-sample-app:${{ github.sha }} .
            #   docker tag $DOCKER_USERNAME/java-sample-app:${{ github.sha }} $DOCKER_USERNAME/java-sample-app:latest
            #   ;;

            dotnet)
              echo .NET: Restoring & Building...
              dotnet restore
              dotnet build --configuration Release
              echo Building Docker image...
              docker build -t $DOCKER_USERNAME/csharp-sample-app:${{ github.sha }} .
              docker tag $DOCKER_USERNAME/csharp-sample-app:${{ github.sha }} $DOCKER_USERNAME/csharp-sample-app:latest
              ;;

            *)
              echo "Unsupported language: ${{ inputs.language }}"
              exit 1
              ;;
          esac

      - name: Trivy Image Scan
        run: |
          IMAGE_NAME=$DOCKER_USERNAME/${{ inputs.language }}-sample-app:${{ github.sha }}
          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock \
            aquasecurity/trivy image \
            --severity HIGH,CRITICAL \
            --exit-code 0 \
            --format table \
            $IMAGE_NAME

      - name: Push Docker Image
        run: |
          docker push $DOCKER_USERNAME/${{ inputs.language }}-sample-app:${{ github.sha }}
          docker push $DOCKER_USERNAME/${{ inputs.language }}-sample-app:latest

  call-audit-log:
    uses: WahbaMousa-DevOps/CENTRALIZED-GITHUB-ACTIONS/.github/workflows/audit.yml@main
    with:
      audit_message: "Build job completed successfully."
      job_name: "build"
